{"version":3,"sources":["webpack://Store/webpack/universalModuleDefinition","webpack://Store/webpack/bootstrap","webpack://Store/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Store","dbtype","dbname","Math","random","toString","slice","destoryfn","this","localStorage","sessionStorage","synchrodata","storagefn","e","storagechangefn","detail","uuid","addEventListener","push","removeEventListener","isSave","setItem","JSON","stringify","data","getItem","test","parse","has","dispatch","removeItem","forEach","fn","event","CustomEvent","bubbles","cancelable","dispatchEvent"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Store\"] = factory();\n\telse\n\t\troot[\"Store\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * @author 翠林\r\n * @deprecated 对 Storage 的封装\r\n */\r\n\r\n/**\r\n * Store 实例的内部缓存\r\n */\r\ntype Data = {\r\n    [propName: string]: any\r\n}\r\n\r\n/**\r\n * Storage 管理器\r\n */\r\nexport default class Store {\r\n    /** 当前实例的标识 */\r\n    #uuid: string = Math.random().toString(16).slice(2, 12)\r\n\r\n    /** Storage */\r\n    #storage: Storage\r\n\r\n    /**\r\n     * 当前实例对数据的缓存\r\n     */\r\n    #data: Data = {}\r\n\r\n    /**\r\n     * 实例销毁前的回调函数\r\n     */\r\n    public destoryfn: Function[] = []\r\n\r\n    /**\r\n     * 获取当前空间下的所有数据\r\n     */\r\n    public get data() {\r\n        return this.#data\r\n    }\r\n\r\n    /**\r\n     * 创建数据库管理器实例\r\n     * @param dbtype Storage 类型\r\n     * @param dbname Storage 的键名\r\n     */\r\n    public constructor(private dbtype: 'local' | 'session', private dbname: string = 'clinfc-store') {\r\n        this.#storage = dbtype === 'local' ? window.localStorage : window.sessionStorage\r\n\r\n        this.synchrodata(false)\r\n\r\n        // storage 事件的回调函数\r\n        const storagefn = (e: StorageEvent) => {\r\n            if (e.key === this.dbname) {\r\n                this.synchrodata(false)\r\n            }\r\n        }\r\n\r\n        // 自定义 storage change 事件的回调函数\r\n        const storagechangefn = (e: CustomEventInit) => {\r\n            if (e.detail && e.detail.dbname === this.dbname && e.detail.uuid !== this.#uuid) {\r\n                this.synchrodata(false)\r\n            }\r\n        }\r\n\r\n        // 绑定监听\r\n        window.addEventListener('storage', storagefn)\r\n        window.addEventListener(`${this.dbtype}storagechange`, storagechangefn)\r\n\r\n        // 销毁时取消监听事件\r\n        this.destoryfn.push(() => {\r\n            window.removeEventListener('storage', storagefn)\r\n            window.removeEventListener(`${this.dbtype}storagechange`, storagechangefn)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 同步当前实例与 Storage 中的数据\r\n     * @param isSave true: 将实例缓存保存到 Storage 中；false: 将 Storage 中数据同步到当前实例中\r\n     */\r\n    public synchrodata(isSave: boolean = true) {\r\n        if (isSave) {\r\n            // 将当前实例中的数据保存到缓存中\r\n            this.#storage.setItem(this.dbname, JSON.stringify(this.#data))\r\n        } else {\r\n            // 将缓存中的数据同步到当前实例中\r\n            const data = this.#storage.getItem(this.dbname)\r\n            if (data && /^\\{.*\\}$/.test(data)) {\r\n                this.#data = JSON.parse(data)\r\n            } else {\r\n                this.#data = {}\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断缓存中是否包含该键名\r\n     * @param key 键名\r\n     */\r\n    public has(key: string) {\r\n        return key in this.#data\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名的数据\r\n     * @param key 键名\r\n     */\r\n    public get(key: string) {\r\n        if (this.has(key)) {\r\n            return this.#data[key]\r\n        }\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * 添加/设置值\r\n     * @param key 键名\r\n     * @param value 值\r\n     */\r\n    public set(key: string, value: any) {\r\n        this.#data[key] = value\r\n        this.synchrodata(true)\r\n        this.dispatch()\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 删除指定键名数据\r\n     * @param key 需要被删除的键\r\n     */\r\n    public remove(key: string) {\r\n        if (this.has(key)) {\r\n            delete this.#data[key]\r\n            this.synchrodata(true)\r\n            this.dispatch()\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 清除数据\r\n     */\r\n    public clear() {\r\n        this.#data = {}\r\n        this.#storage.removeItem(this.dbname)\r\n        this.dispatch()\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 销毁实例\r\n     */\r\n    public destroy() {\r\n        this.destoryfn.forEach(fn => fn.call(this))\r\n        this.#data = {}\r\n    }\r\n\r\n    /**\r\n     * 发布 sessionstoragechange/localstoragechange 事件\r\n     */\r\n    public dispatch() {\r\n        const event = new CustomEvent(`${this.dbtype}storagechange`, {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            detail: {\r\n                uuid: this.#uuid,\r\n                dbname: this.dbname,\r\n            },\r\n        })\r\n        window.dispatchEvent(event)\r\n    }\r\n\r\n    /**\r\n     * 快捷创建 sessionStorage 类型数据库管理器实例\r\n     * @param dbname 数据库名称\r\n     */\r\n    public static session(dbname?: string) {\r\n        return new Store('session', dbname)\r\n    }\r\n\r\n    /**\r\n     * 快捷创建 localStorage 类型数据库管理器实例\r\n     * @param dbname 数据库名称\r\n     */\r\n    public static local(dbname?: string) {\r\n        return new Store('local', dbname)\r\n    }\r\n}\r\n"],"sourceRoot":""}